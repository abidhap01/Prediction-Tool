/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myprediction;

import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author achintyadwivedi
 */
public class ExpertNewEstimation extends javax.swing.JFrame {

    /**
     * Creates new form ExpertNewEstimation
     */
    public ExpertNewEstimation() {
        initComponents();
         getContentPane().setBackground(Color.lightGray);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        regionBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        incomeBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dieselTextField = new javax.swing.JTextField();
        RoadTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        gasTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        CarTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        vehPeopleTextField1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        VehKMTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        PMTextField = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();
        OkButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Test Instance");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Region");

        regionBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "East Asia & Pacific", "Europe & Central Asia", "Latin America & Caribbean", "Middle East & North Africa", "North America", "South Asia", "Sub-Saharan Africa", "West Bank and Gaza" }));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("IncomeGroup");

        incomeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "High income: nonOECD", "High income: OECD", "Low income", "Lower middle income", "Upper middle income" }));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Diesel_Consumption");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Road_Density");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel5.setText("Gasoline_Consumption");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel6.setText("Car_Per_K_People");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel7.setText("Vehicle_Per_K_People");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel8.setText("Vehicle_Per_KM");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel9.setText("PM2.5 Range");

        cancelButton.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        cancelButton.setText("CANCEL");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        OkButton.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        OkButton.setText("OK");
        OkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vehPeopleTextField1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(regionBox, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(RoadTextField)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(incomeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(VehKMTextField)
                            .addComponent(gasTextField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cancelButton)
                            .addComponent(jLabel8))
                        .addGap(24, 24, 24)
                        .addComponent(OkButton)))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dieselTextField)
                    .addComponent(CarTextField)
                    .addComponent(PMTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(regionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(incomeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(dieselTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(RoadTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(gasTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(CarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(vehPeopleTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(VehKMTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(PMTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(OkButton))
                .addGap(67, 67, 67))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
         setVisible(false);
       ExpertFrame nm=new ExpertFrame();
       nm.setVisible(true);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void OkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkButtonActionPerformed
        
        int dieselValue=0;
        int roadValue=0;
        int gasValue=0;
        int carValue=0;
        int vehpeopleValue=0;
        int gvehperValue=0;
        int PMvalue=0;
        String region= regionBox.getSelectedItem().toString();
       String income = incomeBox.getSelectedItem().toString();
       
      if(dieselTextField.getText().equals("")){
       //  JOptionPane.showMessageDialog(this, "please enter the value ."); 
      }else{
           dieselValue=Integer.parseInt(dieselTextField.getText());
      }
      
      if(RoadTextField.getText().equals("")){
           // JOptionPane.showMessageDialog(this, "please enter the value ."); 
      }else{
           roadValue=Integer.parseInt(RoadTextField.getText());
      }
      if(PMTextField.getText().equals("")){
           // JOptionPane.showMessageDialog(this, "please enter the value ."); 
      }else{
           PMvalue=Integer.parseInt(PMTextField.getText());
      }
      if(VehKMTextField.getText().equals("")){
          //  JOptionPane.showMessageDialog(this, "please enter the value ."); 
      }else{
           gvehperValue=Integer.parseInt(VehKMTextField.getText());
      }
      if(vehPeopleTextField1.getText().equals("")){
           // JOptionPane.showMessageDialog(this, "please enter the value ."); 
      }else{
           vehpeopleValue=Integer.parseInt(vehPeopleTextField1.getText());
      }
      if(CarTextField.getText().equals("")){
            //JOptionPane.showMessageDialog(this, "please enter the value ."); 
      }else{
           carValue=Integer.parseInt(CarTextField.getText());
      }
      if(gasTextField.getText().equals("")){
           // JOptionPane.showMessageDialog(this, "please enter the value ."); 
      }else{
           gasValue=Integer.parseInt(gasTextField.getText());
      }
       
      
       
     
      
    
            
         if(region.equals("East Asia & Pacific")){
           if(gasValue <=427.7){
               if(income.equals("High income: nonOECD")){
               JOptionPane.showMessageDialog(this, "(18.43-21.755] Moderate", "Rule Match", -1);
           }else if(income.equals("High income: OECD")){
                 JOptionPane.showMessageDialog(this, "(21.755-inf] moderate-potential", "Rule Match", -1);
           }else if(income.equals("Low income")){
                 JOptionPane.showMessageDialog(this, "(18.43-21.755] Moderate", "Rule Match", -1);
           }else if(income.equals("Lower middle income")){
                 JOptionPane.showMessageDialog(this, "(11.98-15.12] Moderate", "Rule Match", -1);
           }else if(income.equals("Upper middle income")){
               if(dieselValue<= 114.38){
                   JOptionPane.showMessageDialog(this, "(21.755-inf) moderate-potential", "Rule Match", -1);
               }else{
                    JOptionPane.showMessageDialog(this, "(11.98-15.12] Moderate", "Rule Match", -1);
               }
                 
           }
               
           }else{
                JOptionPane.showMessageDialog(this, "(-inf-5.845] verygood", "Rule Match", -1);
           }
           }else if(region.equals("Europe & Central Asia")){
               if(gvehperValue<= 35.96){
                   if(income.equals("High income: nonOECD")){
                      JOptionPane.showMessageDialog(this, "(5.845-11.98] Good", "Rule Match", -1); 
                   }else if(income.equals("High income: OECD")){
                       if(roadValue<= 56.21){
                            JOptionPane.showMessageDialog(this, "(-inf-5.845] verygood", "Rule Match", -1);
                       }else{
                           if(dieselValue<= 326.59){
                              JOptionPane.showMessageDialog(this, "(-inf-5.845] verygood", "Rule Match", -1); 
                           }else{
                               if(roadValue<= 180.48){
                                   JOptionPane.showMessageDialog(this, "(5.845-11.98] Good", "Rule Match", -1);
                               }else{
                                    JOptionPane.showMessageDialog(this, "(15.12-18.43] Moderate", "Rule Match", -1);
                               }
                           }
                       }
                       
                   }else if(income.equals("Low income")){
                        JOptionPane.showMessageDialog(this, "(5.845-11.98] Good", "Rule Match", -1);
                   }else if(income.equals("Lower middle income")){
                       JOptionPane.showMessageDialog(this, "(15.12-18.43] Moderate", "Rule Match", -1);
                   }else if(income.equals("Upper middle income")){
                        if(roadValue <= 44.33){
                            if(vehpeopleValue <= 219.2){
                                 JOptionPane.showMessageDialog(this, "(11.98-15.12] Moderate", "Rule Match", -1);
                            }else{
                                 JOptionPane.showMessageDialog(this, "(5.845-11.98] Good", "Rule Match", -1); 
                            }
                       } else{
                            if(gvehperValue <= 24.12){
                                 JOptionPane.showMessageDialog(this, "(18.43-21.755] Moderate", "Rule Match", -1);
                            }else{
                                 JOptionPane.showMessageDialog(this, "(15.12-18.43] Moderate", "Rule Match", -1); 
                            }
                        }
                   }
                   
               }else{
                   if(roadValue<= 214.51){
                       if(income.equals("High income: nonOECD")){
                           if(dieselValue<= 269.78){
                               JOptionPane.showMessageDialog(this, "((11.98-15.12] Moderate", "Rule Match", -1); 
                           }else{
                                JOptionPane.showMessageDialog(this, "(18.43-21.755 ]Moderate", "Rule Match", -1); 
                           }
                       }else if(income.equals("High income: OECD")){
                           if(carValue<= 529.33){
                               if(dieselValue<= 341.82){
                                   if(dieselValue<= 222.09){
                                       JOptionPane.showMessageDialog(this, "(18.43-21.755] Moderate", "Rule Match", -1);
                                   }else{
                                       if(roadValue <= 173.89){
                                           if(dieselValue<= 246.57){
                                              JOptionPane.showMessageDialog(this, "(15.12-18.43] Moderate", "Rule Match", -1);  
                                           }else{
                                                JOptionPane.showMessageDialog(this, "(11.98-15.12] Moderate", "Rule Match", -1); 
                                           }
                                       }else{
                                            JOptionPane.showMessageDialog(this, " (15.12-18.43] Moderate", "Rule Match", -1);
                                         
                                       }
                                     
                                   }
                               }else{
                                   JOptionPane.showMessageDialog(this, " (11.98-15.12] Moderate", "Rule Match", -1);
                               }
                           }else{
                                JOptionPane.showMessageDialog(this, " (-inf-5.845] verygood", "Rule Match", -1);
                           }
                           
                       }else if(income.equals("Low income")){
                            JOptionPane.showMessageDialog(this, "(11.98-15.12]Moderate", "Rule Match", -1);
                       }else if(income.equals("Lower middle income")){
                           JOptionPane.showMessageDialog(this, "(11.98-15.12] Moderate", "Rule Match", -1);
                       }else if(income.equals("Upper middle income")){
                           if(gasValue<= 118.83){
                               JOptionPane.showMessageDialog(this, "(15.12-18.43] Moderate", "Rule Match", -1); 
                           }else{
                                JOptionPane.showMessageDialog(this, "(11.98-15.12] Moderate", "Rule Match", -1); 
                           }
                       }
                   }else{
                       JOptionPane.showMessageDialog(this, "(18.43-21.755] Moderate", "Rule Match", -1);  
                   }
               }
               
           }else if(region.equals("Latin America & Caribbean")){
               if(gasValue<= 223.27){
                   if(income.equals("High income: nonOECD")){
                       JOptionPane.showMessageDialog(this, "5.845-11.98] Good", "Rule Match", -1);
                   }else if(income.equals("High income: OECD")){
                       JOptionPane.showMessageDialog(this, "(5.845-11.98] Good", "Rule Match", -1);
                   }else if(income.equals("Low income")){
                       JOptionPane.showMessageDialog(this, "(5.845-11.98] Good", "Rule Match", -1);
                   }else if(income.equals("Lower middle income")){
                       if(roadValue<= 16.03){
                            JOptionPane.showMessageDialog(this, "(5.845-11.98] Good", "Rule Match", -1);
                       }else{
                           JOptionPane.showMessageDialog(this, "(-inf-5.845] verygood", "Rule Match", -1); 
                       }
                       
                   }else if(income.equals("Upper middle income")){
                       if(roadValue <= 46.87){
                           if(gasValue<= 55.97){
                              JOptionPane.showMessageDialog(this, "(5.845-11.98] Good", "Rule Match", -1);  
                           }else{
                               JOptionPane.showMessageDialog(this, "(-inf-5.845] verygood", "Rule Match", -1);
                           }
                       }else{
                           JOptionPane.showMessageDialog(this, "(5.845-11.98] Good", "Rule Match", -1); 
                       }
                   }
               }else{
                   JOptionPane.showMessageDialog(this, "(15.12-18.43] Moderate", "Rule Match", -1);  
               }
           }else if(region.equals("Middle East & North Africa")){
               if(gasValue<= 51.98){
                    JOptionPane.showMessageDialog(this, "(18.43-21.755] Moderate", "Rule Match", -1); 
               }else{
                   JOptionPane.showMessageDialog(this, "(21.755-inf) moderate-potential damage", "Rule Match", -1);
               }
               
           }else if(region.equals("North America")){
                JOptionPane.showMessageDialog(this, "(11.98-15.12]Moderate", "Rule Match", -1);
           }else if(region.equals("South Asia")){
                JOptionPane.showMessageDialog(this, "(21.755-inf) moderate-potential damage", "Rule Match", -1);
           }else if(region.equals("Sub-Saharan Africa")){
               
               if(income.equals("High income: nonOECD")){
                     JOptionPane.showMessageDialog(this, "(-inf-5.845] verygood", "Rule Match", -1);
               }else if(income.equals("High income: OECD")){
                     JOptionPane.showMessageDialog(this, "(-inf-5.845] verygood", "Rule Match", -1);
               }else if(income.equals("Low incomeD")){
                     JOptionPane.showMessageDialog(this, "(-inf-5.845] verygood", "Rule Match", -1);
               }else if(income.equals("Lower middle income")){
                     JOptionPane.showMessageDialog(this, "(15.12-18.43 ]Moderate", "Rule Match", -1);
               }else if(income.equals("Upper middle income")){
                     JOptionPane.showMessageDialog(this, "(-inf-5.845] verygood", "Rule Match", -1);
               }
           }else if(region.equals("West Bank and Gaza")){
                JOptionPane.showMessageDialog(this, "(-inf-5.845] verygood", "Rule Match", -1);
           }
          
      showDialog(JOptionPane.YES_OPTION);
 
     
    
      
    }//GEN-LAST:event_OkButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExpertNewEstimation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExpertNewEstimation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExpertNewEstimation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExpertNewEstimation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExpertNewEstimation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CarTextField;
    private javax.swing.JButton OkButton;
    private javax.swing.JTextField PMTextField;
    private javax.swing.JTextField RoadTextField;
    private javax.swing.JTextField VehKMTextField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField dieselTextField;
    private javax.swing.JTextField gasTextField;
    private javax.swing.JComboBox<String> incomeBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> regionBox;
    private javax.swing.JTextField vehPeopleTextField1;
    // End of variables declaration//GEN-END:variables

    public  void showDialog(int i) {
          if(i==0){
        dispose();
        ExpertFrame fm=new ExpertFrame();
        fm.setVisible(true);
                
    }
      }
}
