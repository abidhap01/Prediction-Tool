/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myprediction;

import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author achintyadwivedi
 */
public class NoviceNewEstimation extends javax.swing.JFrame {

    /**
     * Creates new form NoviceNewEstimation
     */
    public NoviceNewEstimation() {
        initComponents();
         getContentPane().setBackground(Color.lightGray);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        regionBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        incomeBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        DieselBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        RoadBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        GasBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        CarBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        VehiclesPeopleBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        VehiclePerKBox = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        PMRangeBox = new javax.swing.JComboBox<>();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Test Instance");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Region");

        regionBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "East Asia & Pacific", "Europe & Central Asia", "Latin America & Caribbean", "Middle East & North Africa", "North America", "South Asia", "Sub-Saharan Africa", "West Bank and Gaza" }));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("IncomeGroup");

        incomeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "High income: nonOECD", "High income: OECD", "Low income", "Lower middle income", "Upper middle income" }));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Diesel_Consumption");

        DieselBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "000-100", "100-200", "200-300", "400-500", "600-700", "800-900", "900-1000" }));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Road_Density");

        RoadBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "000-100", "100-200", "200-300", "400-500", "600-700", "800-900", "900-1000" }));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel5.setText("Gasoline_consumption");

        GasBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "000-100", "100-200", "200-300", "400-500", "600-700", "800-900", "900-1000" }));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel6.setText("Car_Per_K_People");

        CarBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "000-100", "100-200", "200-300", "400-500", "600-700", "800-900", "900-1000" }));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel7.setText("Vehicle_Per_K_People");

        VehiclesPeopleBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "000-100", "100-200", "200-300", "400-500", "600-700", "800-900", "900-1000", " " }));

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel8.setText("Vehicle_Per_KM");

        VehiclePerKBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "000-050", "050-100", "100-150", "150-200", "200-250", "250-300", "300-350", "350-400", "350-400", "400-450", "450-500", " " }));

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel9.setText("PM2.5_Range");

        PMRangeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00-10", "10-20", "20-30", "30-40", "40-50" }));

        cancelButton.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        cancelButton.setText("CANCEL");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myprediction/question_help_mark_balloon-512_1.png"))); // NOI18N
        jButton1.setToolTipText("Country groups");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myprediction/question_help_mark_balloon-512_1.png"))); // NOI18N
        jButton3.setToolTipText("Economies by country group");

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myprediction/question_help_mark_balloon-512_1.png"))); // NOI18N
        jButton4.setToolTipText("Road sector diesel fuel consumption per capita(kg of oil equivalent)");

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myprediction/question_help_mark_balloon-512_1.png"))); // NOI18N
        jButton5.setToolTipText("Road density(km of road per 100sq. km of land area)");

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myprediction/question_help_mark_balloon-512_1.png"))); // NOI18N
        jButton6.setToolTipText("Road sector gasoline fuel consumption per capita(kg of oil equipment)");

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myprediction/question_help_mark_balloon-512_1.png"))); // NOI18N
        jButton8.setToolTipText("Motor Vehicles (per 1000 people)");

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myprediction/question_help_mark_balloon-512_1.png"))); // NOI18N
        jButton9.setToolTipText("Vehicles (per km of road)");

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myprediction/question_help_mark_balloon-512_1.png"))); // NOI18N
        jButton11.setToolTipText("Passenger cars(per 1,000 people)");

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myprediction/question_help_mark_balloon-512_1.png"))); // NOI18N
        jButton12.setToolTipText("Fine particulate matter (PM2.5) is an air pollutant that is a concern for people's health when levels in air are high.");
        jButton12.setRolloverEnabled(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1))
                                .addGap(54, 54, 54))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(VehiclesPeopleBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(regionBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(RoadBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8)))
                                .addGap(29, 29, 29)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(incomeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(GasBox, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(okButton)
                                    .addComponent(VehiclePerKBox, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(454, 454, 454)
                        .addComponent(cancelButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(PMRangeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(CarBox, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DieselBox, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(127, 127, 127))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(regionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(incomeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DieselBox)
                        .addGap(2, 2, 2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(GasBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(CarBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RoadBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(VehiclePerKBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel7)
                                            .addComponent(VehiclesPeopleBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(4, 4, 4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(PMRangeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9))
                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        int carValue=0,
                dieselValue=0,
                PMValue=0,
                gasValue=0,
                roadValue=0,
                gvehperValue=0,
                vehpeopleValue=0;
        String region= regionBox.getSelectedItem().toString();
       String income = incomeBox.getSelectedItem().toString();
       String car = CarBox.getSelectedItem().toString();
       if(car.equals("000-100")){
            carValue = 50;
       }else if(car.equals("100-200")){
            carValue = 150;
       }else if(car.equals("200-300")){
            carValue = 250;
       }else if(car.equals("300-400")){
            carValue = 350;
       }else if(car.equals("400-500")){
            carValue = 450;
       }else if(car.equals("500-600")){
            carValue = 550;
       }else if(car.equals("600-700")){
            carValue = 650;
       }else if(car.equals("700-800")){
            carValue = 750;
       }else if(car.equals("800-900")){
            carValue = 850;
       }else if(car.equals("900-1000")){
            carValue = 950;
       }
        
       String diesel= DieselBox.getSelectedItem().toString();
        if(diesel.equals("000-100")){
           dieselValue = 50;
       }else if(diesel.equals("100-200")){
            dieselValue = 150;
       }else if(diesel.equals("200-300")){
            dieselValue = 250;
       }else if(diesel.equals("300-400")){
            dieselValue = 350;
       }else if(diesel.equals("400-500")){
            dieselValue = 450;
       }else if(diesel.equals("500-600")){
            dieselValue = 550;
       }else if(diesel.equals("600-700")){
            dieselValue = 650;
       }else if(diesel.equals("700-800")){
            dieselValue = 750;
       }else if(diesel.equals("800-900")){
            dieselValue = 850;
       }else if(diesel.equals("900-1000")){
            dieselValue = 950;
       }
        
       
       String PMrange =  PMRangeBox.getSelectedItem().toString();
       if(PMrange.equals("00-10")){
           PMValue = 5;
       }else if(PMrange.equals("10-20")){
           PMValue = 15;
       }else if(PMrange.equals("20-30")){
           PMValue = 25;
       }else if(PMrange.equals("30-40")){
           PMValue = 35;
       }else if(PMrange.equals("40-50")){
           PMValue = 45;
       }
       // double PMValue = Double.parseDouble(PMrange);
       String gas =   GasBox.getSelectedItem().toString();
       if(gas.equals("000-100")){
           gasValue = 50;
       }else if(gas.equals("100-200")){
           gasValue = 150;
       }else if(gas.equals("200-300")){
           gasValue = 250;
       }else if(gas.equals("300-400")){
           gasValue = 350;
       }else if(gas.equals("400-500")){
           gasValue = 450;
       }else if(gas.equals("500-600")){
           gasValue = 550;
       }else if(gas.equals("600-700")){
           gasValue = 650;
       }else if(gas.equals("700-800")){
           gasValue = 750;
       }else if(gas.equals("800-900")){
           gasValue = 850;
       }else if(gas.equals("900-1000")){
           gasValue = 950;
       }
     //   double gasValue = Double.parseDouble(gas);
       String road =  RoadBox.getSelectedItem().toString();
       if(road.equals("000-100")){
           roadValue = 50;
       }else if(road.equals("000-100")){
           roadValue = 50;
       }else if(road.equals("100-200")){
           roadValue = 150;
       }else if(road.equals("200-300")){
           roadValue = 250;
       }else if(road.equals("300-400")){
           roadValue = 350;
       }else if(road.equals("400-500")){
           roadValue = 450;
       }else if(road.equals("500-600")){
           roadValue = 550;
       }else if(road.equals("600-700")){
           roadValue = 650;
       }else if(road.equals("700-800")){
           roadValue = 750;
       }else if(road.equals("800-900")){
           roadValue = 850;
       }else if(road.equals("900-1000")){
           roadValue = 950;
       }
       
   //     double roadValue = Double.parseDouble(road);
        
       String vehper=  VehiclePerKBox.getSelectedItem().toString();
       if(vehper.equals("00-10")){
           gvehperValue = 10;
       }else if(vehper.equals("10-20")){
           gvehperValue = 20;
       }else if(vehper.equals("20-30")){
           gvehperValue = 30;
       }else if(vehper.equals("30-40")){
           gvehperValue = 40;
       }else if(vehper.equals("40-50")){
           gvehperValue = 50;
       }
    //    double gvehperValue = Double.parseDouble(vehper);
       String vehpeople=VehiclesPeopleBox.getSelectedItem().toString();
       if(vehpeople.equals("000-100")){
           vehpeopleValue = 50;
       } if(vehpeople.equals("100-200")){
           vehpeopleValue = 150;
       } if(vehpeople.equals("200-300")){
           vehpeopleValue = 250;
       } if(vehpeople.equals("300-400")){
           vehpeopleValue = 350;
       } if(vehpeople.equals("400-5000")){
           vehpeopleValue = 450;
       } if(vehpeople.equals("500-600")){
           vehpeopleValue = 550;
       } if(vehpeople.equals("600-700")){
           vehpeopleValue = 650;
       } if(vehpeople.equals("700-800")){
           vehpeopleValue = 750;
       } if(vehpeople.equals("800-900")){
           vehpeopleValue = 850;
       } if(vehpeople.equals("900-1000")){
           vehpeopleValue = 950;
       }
    //    double vehpeople = Double.parseDouble(vehpeople);
       
       if(region.equals("East Asia & Pacific")){
           if(gasValue <=427.7){
               if(income.equals("High income: nonOECD")){
               JOptionPane.showMessageDialog(this, "Moderate", "Rule Match", -1);
           }else if(income.equals("High income: OECD")){
                 JOptionPane.showMessageDialog(this, " moderate-potential", "Rule Match", -1);
           }else if(income.equals("Low income")){
                 JOptionPane.showMessageDialog(this, "( Moderate", "Rule Match", -1);
           }else if(income.equals("Lower middle income")){
                 JOptionPane.showMessageDialog(this, " Moderate", "Rule Match", -1);
           }else if(income.equals("Upper middle income")){
               if(dieselValue<= 114.38){
                   JOptionPane.showMessageDialog(this, " moderate-potential", "Rule Match", -1);
               }else{
                    JOptionPane.showMessageDialog(this, "( Moderate", "Rule Match", -1);
               }
                 
           }
               
           }else{
                JOptionPane.showMessageDialog(this, " verygood", "Rule Match", -1);
           }
           }else if(region.equals("Europe & Central Asia")){
               if(gvehperValue<= 35.96){
                   if(income.equals("High income: nonOECD")){
                      JOptionPane.showMessageDialog(this, "Good", "Rule Match", -1); 
                   }else if(income.equals("High income: OECD")){
                       if(roadValue<= 56.21){
                            JOptionPane.showMessageDialog(this, " verygood", "Rule Match", -1);
                       }else{
                           if(dieselValue<= 326.59){
                              JOptionPane.showMessageDialog(this, " verygood", "Rule Match", -1); 
                           }else{
                               if(roadValue<= 180.48){
                                   JOptionPane.showMessageDialog(this, " Good", "Rule Match", -1);
                               }else{
                                    JOptionPane.showMessageDialog(this, " Moderate", "Rule Match", -1);
                               }
                           }
                       }
                       
                   }else if(income.equals("Low income")){
                        JOptionPane.showMessageDialog(this, " Good", "Rule Match", -1);
                   }else if(income.equals("Lower middle income")){
                       JOptionPane.showMessageDialog(this, "Moderate", "Rule Match", -1);
                   }else if(income.equals("Upper middle income")){
                        if(roadValue <= 44.33){
                            if(vehpeopleValue <= 219.2){
                                 JOptionPane.showMessageDialog(this, " Moderate", "Rule Match", -1);
                            }else{
                                 JOptionPane.showMessageDialog(this, " Good", "Rule Match", -1); 
                            }
                       } else{
                            if(gvehperValue <= 24.12){
                                 JOptionPane.showMessageDialog(this, " Moderate", "Rule Match", -1);
                            }else{
                                 JOptionPane.showMessageDialog(this, " Moderate", "Rule Match", -1); 
                            }
                        }
                   }
                   
               }else{
                   if(roadValue<= 214.51){
                       if(income.equals("High income: nonOECD")){
                           if(dieselValue<= 269.78){
                               JOptionPane.showMessageDialog(this, " Moderate", "Rule Match", -1); 
                           }else{
                                JOptionPane.showMessageDialog(this, " Moderate", "Rule Match", -1); 
                           }
                       }else if(income.equals("High income: OECD")){
                           if(carValue<= 529.33){
                               if(dieselValue<= 341.82){
                                   if(dieselValue<= 222.09){
                                       JOptionPane.showMessageDialog(this, "Moderate", "Rule Match", -1);
                                   }else{
                                       if(roadValue <= 173.89){
                                           if(dieselValue<= 246.57){
                                              JOptionPane.showMessageDialog(this, " Moderate", "Rule Match", -1);  
                                           }else{
                                                JOptionPane.showMessageDialog(this, " Moderate", "Rule Match", -1); 
                                           }
                                       }else{
                                            JOptionPane.showMessageDialog(this, "  Moderate", "Rule Match", -1);
                                         
                                       }
                                     
                                   }
                               }else{
                                   JOptionPane.showMessageDialog(this, "  Moderate", "Rule Match", -1);
                               }
                           }else{
                                JOptionPane.showMessageDialog(this, " verygood", "Rule Match", -1);
                           }
                           
                       }else if(income.equals("Low income")){
                            JOptionPane.showMessageDialog(this, "Moderate", "Rule Match", -1);
                       }else if(income.equals("Lower middle income")){
                           JOptionPane.showMessageDialog(this, " Moderate", "Rule Match", -1);
                       }else if(income.equals("Upper middle income")){
                           if(gasValue<= 118.83){
                               JOptionPane.showMessageDialog(this, " Moderate", "Rule Match", -1); 
                           }else{
                                JOptionPane.showMessageDialog(this, " Moderate", "Rule Match", -1); 
                           }
                       }
                   }else{
                       JOptionPane.showMessageDialog(this, " Moderate", "Rule Match", -1);  
                   }
               }
               
           }else if(region.equals("Latin America & Caribbean")){
               if(gasValue<= 223.27){
                   if(income.equals("High income: nonOECD")){
                       JOptionPane.showMessageDialog(this, " Good", "Rule Match", -1);
                   }else if(income.equals("High income: OECD")){
                       JOptionPane.showMessageDialog(this, " Good", "Rule Match", -1);
                   }else if(income.equals("Low income")){
                       JOptionPane.showMessageDialog(this, " Good", "Rule Match", -1);
                   }else if(income.equals("Lower middle income")){
                       if(roadValue<= 16.03){
                            JOptionPane.showMessageDialog(this, " Good", "Rule Match", -1);
                       }else{
                           JOptionPane.showMessageDialog(this, "verygood", "Rule Match", -1); 
                       }
                       
                   }else if(income.equals("Upper middle income")){
                       if(roadValue <= 46.87){
                           if(gasValue<= 55.97){
                              JOptionPane.showMessageDialog(this, " Good", "Rule Match", -1);  
                           }else{
                               JOptionPane.showMessageDialog(this, " verygood", "Rule Match", -1);
                           }
                       }else{
                           JOptionPane.showMessageDialog(this, "Good", "Rule Match", -1); 
                       }
                   }
               }else{
                   JOptionPane.showMessageDialog(this, " Moderate", "Rule Match", -1);  
               }
           }else if(region.equals("Middle East & North Africa")){
               if(gasValue<= 51.98){
                    JOptionPane.showMessageDialog(this, "Moderate", "Rule Match", -1); 
               }else{
                   JOptionPane.showMessageDialog(this, " moderate-potential damage", "Rule Match", -1);
               }
               
           }else if(region.equals("North America")){
                JOptionPane.showMessageDialog(this, "Moderate", "Rule Match", -1);
           }else if(region.equals("South Asia")){
                JOptionPane.showMessageDialog(this, " moderate-potential damage", "Rule Match", -1);
           }else if(region.equals("Sub-Saharan Africa")){
               
               if(income.equals("High income: nonOECD")){
                     JOptionPane.showMessageDialog(this, " verygood", "Rule Match", -1);
               }else if(income.equals("High income: OECD")){
                     JOptionPane.showMessageDialog(this, " verygood", "Rule Match", -1);
               }else if(income.equals("Low incomeD")){
                     JOptionPane.showMessageDialog(this, " verygood", "Rule Match", -1);
               }else if(income.equals("Lower middle income")){
                     JOptionPane.showMessageDialog(this, " ]Moderate", "Rule Match", -1);
               }else if(income.equals("Upper middle income")){
                     JOptionPane.showMessageDialog(this, " verygood", "Rule Match", -1);
               }
           }else if(region.equals("West Bank and Gaza")){
                JOptionPane.showMessageDialog(this, " verygood", "Rule Match", -1);
           }
          
      showDialog(JOptionPane.YES_OPTION);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
         setVisible(false);
       NoviceFrame nm=new NoviceFrame();
       nm.setVisible(true);
    }//GEN-LAST:event_cancelButtonActionPerformed
 
                                            
public void showDialog(int i){
    if(i==0){
        dispose();
        NoviceFrame fm=new NoviceFrame();
        fm.setVisible(true);
                
    }
}
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NoviceNewEstimation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NoviceNewEstimation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NoviceNewEstimation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NoviceNewEstimation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NoviceNewEstimation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CarBox;
    private javax.swing.JComboBox<String> DieselBox;
    private javax.swing.JComboBox<String> GasBox;
    private javax.swing.JComboBox<String> PMRangeBox;
    private javax.swing.JComboBox<String> RoadBox;
    private javax.swing.JComboBox<String> VehiclePerKBox;
    private javax.swing.JComboBox<String> VehiclesPeopleBox;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> incomeBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox<String> regionBox;
    // End of variables declaration//GEN-END:variables
}
